/* BOX MODEL CHILDREN ELEMENTS BREAKPOINT CONTROL */
// Locate the _ebm-children-elements.scss partial in the EBM/helpers folder
@for $i from 0 through $loop-limit {
  @for $j from 1 through length($box-model-sides) {
    @for $k from 1 through length($breakpoints-sufix-list) {
      @media #{nth($media-control-list, $k)} {
        .#{nth($box-model-ch-abbr, $j)}-#{$i*$ebm-times}-#{nth($breakpoints-sufix-list, $k)} {
          #{$children-elements} {
            // For <IE8
            #{nth($box-model-sides, $j)}: ($i*$ebm-times) + px #{$importantize};
            // REMs for modern browsers
            @if $px-to-rems == true {
              #{nth($box-model-sides, $j)}: px-to-rem($i*$ebm-times) #{$importantize};
            }
          }
        }
      }
    }
  }
}

// PADDING VERTICAL & HORIZONTAL
@for $i from 0 through $loop-limit {
  @for $k from 1 through length($breakpoints-sufix-list) {
    @media #{nth($media-control-list, $k)} {
      .pv-ch-#{$i*$ebm-times}-#{nth($breakpoints-sufix-list, $k)} {
        #{$children-elements} {
          padding-top: ($i*$ebm-times) + px #{$importantize};
          padding-bottom: ($i*$ebm-times) + px #{$importantize};
          padding-top: px-to-rem($i*$ebm-times) #{$importantize};
          padding-bottom: px-to-rem($i*$ebm-times) #{$importantize};
        }
      }
    }
  }
}

@for $i from 0 through $loop-limit {
  @for $k from 1 through length($breakpoints-sufix-list) {
    @media #{nth($media-control-list, $k)} {
      .ph-ch-#{$i*$ebm-times}-#{nth($breakpoints-sufix-list, $k)} {
        #{$children-elements} {
          padding-left: ($i*$ebm-times) + px #{$importantize};
          padding-right: ($i*$ebm-times) + px #{$importantize};
          padding-left: px-to-rem($i*$ebm-times) #{$importantize};
          padding-right: px-to-rem($i*$ebm-times) #{$importantize};
        }
      }
    }
  }
}

// MARGIN VERTICAL & HORIZONTAL
@for $i from 0 through $loop-limit {
  @for $k from 1 through length($breakpoints-sufix-list) {
    @media #{nth($media-control-list, $k)} {
      .mv-ch-#{$i*$ebm-times}-#{nth($breakpoints-sufix-list, $k)} {
        #{$children-elements} {
          margin-top: ($i*$ebm-times) + px #{$importantize};
          margin-bottom: ($i*$ebm-times) + px #{$importantize};
          margin-top: px-to-rem($i*$ebm-times) #{$importantize};
          margin-bottom: px-to-rem($i*$ebm-times) #{$importantize};
        }
      }
    }
  }
}

@for $i from 0 through $loop-limit {
  @for $k from 1 through length($breakpoints-sufix-list) {
    @media #{nth($media-control-list, $k)} {
      .mh-ch-#{$i*$ebm-times}-#{nth($breakpoints-sufix-list, $k)} {
        #{$children-elements} {
          margin-left: ($i*$ebm-times) + px #{$importantize};
          margin-right: ($i*$ebm-times) + px #{$importantize};
          margin-left: px-to-rem($i*$ebm-times) #{$importantize};
          margin-right: px-to-rem($i*$ebm-times) #{$importantize};
        }
      }
    }
  }
}
